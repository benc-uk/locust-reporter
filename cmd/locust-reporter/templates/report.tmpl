<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <!-- Dependencies -->
  <link rel="stylesheet" href="https://unpkg.com/purecss@2.0.3/build/pure-min.css" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css" integrity="sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp" crossorigin="anonymous" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="shortcut icon" href="https://raw.githubusercontent.com/benc-uk/locust-reporter/main/assets/icon.png" type="image/png">
  <title>Load Test: {{ .Title }}</title>
  <style>
    body {
      margin: 1rem;
    }

    footer,
    footer a {
      float: right;
      font-size: 0.8rem;
      color: #777;
    }

    .tabs {
      display: flex;
      flex-wrap: wrap;
    }

    .tabs label {
      order: 1;
      display: block;
      padding: 1rem 2rem;
      margin-right: 0.2rem;
      cursor: pointer;
      color: #666;
      background: #ddd;
      font-weight: bold;
      font-size: 1.2rem;
      flex: 1 1;
      transition: background ease 0.2s;
      border-top-left-radius: 0.3rem;
      border-top-right-radius: 0.3rem;
      border-color: #ccc;
      border-style: solid;
      border-width: 2px 2px 0px;
      box-shadow: inset 0px -3px 7px -1px rgba(0, 0, 0, 0.33);
    }

    .tabs .tab {
      order: 99;
      flex-grow: 1;
      width: 100%;
      display: none;
      padding: 1rem;
      background: #fff;
    }

    .tabs input[type="radio"] {
      display: none;
    }

    .tabs input[type="radio"]:checked+label {
      background: #fff;
      box-shadow: none;
      color: #000;
    }

    .tabs input[type="radio"]:checked+label+.tab {
      display: block;
    }

    .red {
      background-color: rgb(231, 143, 143) !important;
    }

    .wide {
      width: 100%
    }

    .flexrow {
      display: flex;
    }

    .box {
      flex: 1 1;
      border-radius: 0.3rem;
      background-color: #1054d4;
      margin: 1rem;
      padding: 0.5rem;
      box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.49);
      position: relative;
      overflow: hidden;
      text-align: center;
    }

    .boxtitle {
      color: white;
      font-size: 2.5vw;
    }

    .boxnum {
      color: white;
      font-size: 4.5vw;
    }
  </style>
  <script>
    // Map of arrays of source data, used by charts. Key is the chart name
    const historyData = {};
    
    {{ range $key, $rowData := .HistoryData }}
      historyData['{{ $key }}'] = {
        labels:     [{{ range $rowData }}{{ .TimeFormated }},{{ end }}],
        respAvgs:   [{{ range $rowData }}{{ .RespAvg }},{{ end }}],
        respNinty:  [{{ range $rowData }}{{ .Percentile90 }},{{ end }}],
        respMaxs:   [{{ range $rowData }}{{ .RespMax }},{{ end }}],
        respMeds:   [{{ range $rowData }}{{ .RespMedian }},{{ end }}],
        rateReqs:   [{{ range $rowData }}{{ .RateReq }},{{ end }}],
        rateFails:   [{{ range $rowData }}{{ .RateFail }},{{ end }}],
        countUsers: [{{ range $rowData }}{{ .CountUser }},{{ end }}]
      }
    {{ end }} 

    function getDatasets(key) {
      return [
      {
        label: 'Users',
        backgroundColor: 'rgba(36, 138, 227, 0.5)',
        borderColor: 'rgb(36, 138, 227)',
        pointRadius: 3,
        pointBackgroundColor: 'rgb(36, 138, 227)',
        data: historyData[key].countUsers,
        hidden: true,
      },                         
      {
        label: 'Request Rate',
        backgroundColor: 'rgba(17, 184, 178, 0.5)',
        borderColor: 'rgb(17, 184, 178)',
        pointRadius: 3,
        pointBackgroundColor: 'rgb(17, 184, 178)',
        data: historyData[key].rateReqs,
        hidden: true,
      },        
      {
        label: 'Failure Rate',
        backgroundColor: 'rgba(180, 30, 30, 0.5)',
        borderColor: 'rgb(180, 30, 30)',
        pointRadius: 3,
        pointBackgroundColor: 'rgb(180, 30, 30)',
        data: historyData[key].rateFails,
        hidden: true,
      },                         
      {
        label: 'Resp (Avg)',
        backgroundColor: 'rgba(20, 170, 20, 0.5)',
        borderColor: 'rgb(20, 170, 20)',
        pointRadius: 3,
        pointBackgroundColor: 'rgb(20, 170, 20)',
        data: historyData[key].respAvgs,
        hidden: false,
      },
      {
        label: 'Resp (90%)',
        backgroundColor: 'rgba(97, 27, 194, 0.5)',
        borderColor: 'rgb(97, 27, 194)',
        pointRadius: 3,
        pointBackgroundColor: 'rgb(97, 27, 194)',
        data: historyData[key].respNinty,
        hidden: true,
      },      
      {
        label: 'Resp (Med)',
        backgroundColor: 'rgba(194, 141, 27, 0.5)',
        borderColor: 'rgb(194, 141, 27)',
        pointRadius: 3,
        pointBackgroundColor: 'rgb(194, 141, 27)',
        data: historyData[key].respMeds,
        hidden: false,
      }];  
    }
  </script>
</head>

<body>
  <h1>ðŸ¦— Locust Load Test: {{ .Title }}</h1>

  <!-- row of aggregated data  -->
  <div class="flexrow">
    <div class="box">
      <div class="boxtitle">Total Requests</div>
      <div class="boxnum">{{ .AggregatedStats.CountReq }}</div>
    </div>
    <div class="box">
      <div class="boxtitle">Total Failures</div>
      <div class="boxnum">{{ .AggregatedStats.CountFail }}</div>
    </div>
    <div class="box">
      <div class="boxtitle">Request Rate</div>
      <div class="boxnum">{{ round .AggregatedStats.RateReq 2 }}</div>
    </div>
    <div class="box">
      <div class="boxtitle">Response Time</div>
      <div class="boxnum">{{ round .AggregatedStats.RespMedian 2 }}</div>
    </div>
  </div>

  <div class="tabs">
    <!-- tab summary -->
    <input type="radio" name="tabs" id="summary-tab" checked="checked" />
    <label for="summary-tab"><i class="fas fa-clipboard-list"></i> &nbsp; Summary</label>
    <div class="tab">
      <table class="pure-table pure-table-striped wide">
        <thead>
          <tr>
            <th>Type</th>
            <th>Name</th>
            <th>Requests</th>
            <th>Failures</th>
            <th>Requests/sec</th>
            <th>Failures/sec</th>
            <th>Resp Med (ms)</th>
            <th>Resp Avg (ms)</th>
            <th>Resp Max (ms)</th>
            <th>Resp 90%</th>
            <th>Resp 95%</th>
            <th>Resp 99%</th>
          </tr>
        </thead>
        <tbody>
          {{ range .Stats }}
            {{ if ne .Name "Aggregated"}}
              {{ $class := "" }}
              {{ if gt .CountFail 0 }}{{ $class = "red" }}{{ end }}
              <tr>
                <td class="{{ $class }}">{{ .Type }}</td>
                <td class="{{ $class }}">{{ .Name }}</td>
                <td class="{{ $class }}">{{ .CountReq }}</td>
                <td class="{{ $class }}">{{ .CountFail }}</td>
                <td class="{{ $class }}">{{ round .RateReq 2 }}</td>
                <td class="{{ $class }}">{{ round .RateFail 2 }}</td>
                <td class="{{ $class }}">{{ round .RespMedian 2 }}</td>
                <td class="{{ $class }}">{{ round .RespAvg 2 }}</td>
                <td class="{{ $class }}">{{ round .RespMax 2 }}</td>
                <td class="{{ $class }}">{{ round .Percentile90 2 }}</td>
                <td class="{{ $class }}">{{ round .Percentile95 2 }}</td>
                <td class="{{ $class }}">{{ round .Percentile99 2 }}</td>
              </tr>
            {{ end }}
          {{ end }}
        </tbody>
      </table>
    </div>
      
    <!-- tab chart -->
    <input type="radio" name="tabs" id="charts-tab"/>
    <label for="charts-tab"><i class="fas fa-chart-line"></i> &nbsp; Request Charts</label>
    <div class="tab">
      <!-- Create a chart canvas + script for each set of history data -->
      {{ range $key, $rowData := .HistoryData }}
      {{ if ne $key "Aggregated" }}
        <canvas id="chart_{{ $key }}"></canvas>
        <script>
          // Build the chart
          new Chart(document.getElementById('chart_{{ $key }}'), {
            type: 'line',
            data: {
              labels: historyData['{{ $key }}'].labels,
              datasets: getDatasets('{{ $key }}')
            },
            options: {
              legend: {
                position: 'left'
              },
              title: {
                display: true,
                fontColor: '#444',
                fontSize: 20,
                text: '{{ $key }}'
              }
            }
          });
        </script>
        <hr>
      {{ end }}
      {{ end }}
    </div>

    <!-- tab chart -->
    <input type="radio" name="tabs" id="charts-tab-more"/>
    <label for="charts-tab-more"><i class="fas fa-chart-bar"></i> &nbsp; Other Charts</label>
    <div class="tab">
      <!-- Create a chart for Aggregated data -->
      <canvas id="chart__agg"></canvas>
      <script>
        new Chart(document.getElementById('chart__agg'), {
          type: 'line',
          data: {
            labels: historyData['Aggregated'].labels,
            datasets: getDatasets('Aggregated')
          },
          options: {
            legend: {
              position: 'left'
            },
            title: {
              display: true,
              fontColor: '#444',
              fontSize: 20,
              text: 'Aggregated Data'
            }
          }
        });
      </script>

      <!-- Create a chart comparing response times -->
      <canvas id="chart__compresp"></canvas>
      <script>
        // Compare resp times over all request names/types
        let datasets = [];
        for(let histSetKey in historyData) {
          // Skip Aggregated set
          if(histSetKey == 'Aggregated') continue;
          let randomColor = Math.floor(Math.random()*16777215).toString(16);
          datasets.push({
            label: histSetKey,
            backgroundColor: `#${randomColor}55`,
            borderColor: `#${randomColor}`,
            pointRadius: 3,
            pointBackgroundColor: `#${randomColor}`,
            data: historyData[histSetKey].respAvgs,
            hidden: false,
          });
        };

        new Chart(document.getElementById('chart__compresp'), {
          type: 'line',
          data: {
            labels: historyData['Aggregated'].labels,
            datasets: datasets
          },
          options: {
            legend: {
              position: 'left'
            },
            title: {
              display: true,
              fontColor: '#444',
              fontSize: 20,
              text: 'Compare Avg Response Times'
            }
          }
        });
      </script>
      <hr>
    </div>

    <!-- tab failures -->
    {{ if .Failures  }}
    <input type="radio" name="tabs" id="fail-tab" />
    <label for="fail-tab"><i class="fas fa-bomb"></i> &nbsp; Failures</label>
    <div class="tab">
      <table class="pure-table pure-table-striped wide">
        <thead>
          <tr>
            <th>Method</th>
            <th>Name</th>
            <th>Error</th>
            <th>Count</th>
          </tr>
        </thead>
        <tbody>
          {{ range .Failures }}
            <tr>
              <td>{{ .Method }}</td>
              <td>{{ .Name }}</td>
              <td>{{ .Error }}</td>
              <td>{{ .Occurrences }}</td>
            </tr>
          {{ end }}
        </tbody>
      </table>
    </div>
    {{ end }}
  </div>
  <footer>
    <a href="https://github.com/benc-uk/locust-reporter">Locust Report Converter: Ben Coleman, 2020</a>
  </footer>
</body>

</html>